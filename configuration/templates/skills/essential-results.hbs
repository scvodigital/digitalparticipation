<div class="mdc-layout-grid">
  <div class="mdc-layout-grid__inner title">
    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-12-desktop mdc-layout-grid__cell--span-8-tablet mdc-layout-grid__cell--span-4-phone">
      <h1>Essential digital skills toolkit:<br />Your results</h1>
      <div class="radarChartDesktop responsive-img hide-on-small-only" style="margin-top:2rem;margin-bottom: 2rem;height:560px;width:560px;background-image:url('{{~>asset_url url='images/toolkit-essential-labels.png'~}}');background-size:90%;background-color:#022347;border-radius:50%;background-repeat:no-repeat;background-position:center 38%;"></div>
      <div class="radarChartMobile responsive-img hide-on-med-and-up" style="margin-top:1rem;height:300px;width:300px;background-image:url('{{~>asset_url url='images/toolkit-essential-labels.png'~}}');background-size:90%;background-color:#022347;border-radius:50%;background-repeat:no-repeat;background-position:center 38%;"></div>
      {{!-- <p>
        To help interpret your results: if your points are closer to the edge of the circle you have a good understanding of this section, if the point is closer to the middle in each section you might need to improve your skills in this area.
      </p>
      <p>
        This checklist is designed to simply provide evidence of whether or not people have Essential Digital Skills. Individal responses can obviously be looked at in details, but the most basic interpretation is:
      </p>
      <ol>
        <li>Have got Essential Digital Skills<br />
        = Answer "I can do this" to all of the questions
        </li>
        <li>
          Have not got Essential Digital Skills<br />
          = Answer "I can't do" or "I want to learn how to do this" to any of the questions
        </li>
      </ol> --}}
      <p>
        Thank you for using our toolkit, please <a href="/skills/essential/feedback">provide us with feedback</a> or contact <a href="mailto:claire.sharp@scvo.org.uk">Claire Sharp</a>.
      </p>
      {{!-- <p>
        If your skills aren't what you'd like them to be, you can find more resources on improving them here:
      </p>
      <ul>
        <li><a href="http://www.letsgetonline.scot">Letâ€™s Get Online</a></li>
        <li><a href="http://www.learnmyway.com">Learn My Way</a></li>
        <li><a href="http://www.digitalunite.com">Digital Unite</a></li>
        <li><a href="http://www.learndigital.withgoogle.com/digitalgarage">Google Garage</a></li>
      </ul> --}}
      {{#compare @root.data.supplimentaryResponses.resources_relevant.hits.total ">" 0 ~}}
      <h2>Useful resources based on your results</h2>
      <div class="mdc-layout-grid equal-height t-padding-full">
        <div class="mdc-layout-grid__inner">
          {{#each @root.data.supplimentaryResponses.resources_relevant.hits.hits ~}}
          {{#with _source ~}}
          {{> resource slug=post_tags_slug.[0] tags=post_tags tags_slug=post_tags_slug link=link title=title author=author_attribution content=content}}
          {{/with ~}}
          {{/each ~}}
        </div>
      </div>
      <p>
        To view all of our skills resources <a href="/resources">go to our resources page</a>.
      </p>
      {{/compare ~}}
    </div>
  </div>
  <div class="mdc-layout-grid__inner">
    <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-12-desktop mdc-layout-grid__cell--span-8-tablet mdc-layout-grid__cell--span-4-phone">
      <hr />
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
<script>

//Practically all this code comes from https://github.com/alangrafu/radar-chart-d3
//I only made some additions and aesthetic adjustments to make the chart look better
//(of course, that is only my point of view)
//Such as a better placement of the titles at each line end,
//adding numbers that reflect what each circular level stands for
//Not placing the last level and slight differences in color
//
//For a bit of extra information check the blog about it:
//http://nbremer.blogspot.nl/2013/09/making-d3-radar-chart-look-bit-better.html

var RadarChart = {
  draw: function(id, d, options){
    var cfg = {
      radius: 5,
      w: 600,
      h: 600,
      factor: 1,
      factorLegend: .85,
      levels: 3,
      maxValue: 0,
      radians: 2 * Math.PI,
      opacityArea: 0,
      ToRight: 5,
      TranslateX: 0,
      TranslateY: 0,
      ExtraWidthX: 0,
      ExtraWidthY: 0,
      color: d3.scale.category10()
    };

    if('undefined' !== typeof options){
      for(var i in options){
        if('undefined' !== typeof options[i]){
          cfg[i] = options[i];
        }
      }
    }
    cfg.maxValue = Math.max(cfg.maxValue, d3.max(d, function(i){return d3.max(i.map(function(o){return o.value;}))}));
    var allAxis = (d[0].map(function(i, j){return i.axis}));
    var total = allAxis.length;
    var radius = cfg.factor*Math.min(cfg.w/2, cfg.h/2);
    var Format = d3.format('');
    d3.select(id).select("svg").remove();

    var g = d3.select(id)
    .append("svg")
    .attr("width", cfg.w+cfg.ExtraWidthX)
    .attr("height", cfg.h+cfg.ExtraWidthY)
    .append("g")
    .attr("transform", "translate(" + cfg.TranslateX + "," + cfg.TranslateY + ")");

    var tooltip;

    // Background
    g.append("circle")
    .attr("class", "gridCircle")
    .attr("r", function(d, i){return radius*1.333;})
    .style("fill", "#022347")
    .style("fill-opacity", "0")
    .attr("transform", "translate(" + (cfg.w/2) + ", " + (cfg.h/2) + ")");

    //Circular segments
    g.selectAll(".levels")
    .data(d3.range(1,(cfg.levels+1)).reverse())
    .enter()
    .append("circle")
    .attr("class", "gridCircle")
    .attr("r", function(d, i){return radius/cfg.levels*d;})
    .style("stroke", "#8FC9DC")
    .style("stroke-opacity", "1")
    .style("stroke-width", "2px")
    .style("fill-opacity", "0")
    .attr("transform", "translate(" + (cfg.w/2) + ", " + (cfg.h/2) + ")");

    series = 0;

    var axis = g.selectAll(".axis")
    .data(allAxis)
    .enter()
    .append("g")
    .attr("class", "axis");

    axis.append("line")
    .attr("x1", cfg.w/2)
    .attr("y1", cfg.h/2)
    .attr("x2", function(d, i){return cfg.w/2*(1-cfg.factor*Math.sin(i*cfg.radians/total));})
    .attr("y2", function(d, i){return cfg.h/2*(1-cfg.factor*Math.cos(i*cfg.radians/total));})
    .attr("class", "line")
    .style("stroke", "#8FC9DC")
    .style("stroke-width", "2px");

    // axis.append("text")
  	// 	.attr("class", "legend")
  	// 	.text(function(d){return d})
    //   .style("font-family", "Poppins")
    //   .style("font-weight", "700")
    //   .style("font-size", "1.4rem")
    //   .style("fill", "#fff")
  	// 	.attr("text-anchor", "middle")
  	// 	.attr("dy", "1.5em")
  	// 	.attr("transform", function(d, i){return "translate(0, -20)"})
  	// 	.attr("x", function(d, i){return cfg.w/2*(1-cfg.factorLegend*Math.sin(i*cfg.radians/total))-60*Math.sin(i*cfg.radians/total);})
  	// 	.attr("y", function(d, i){return cfg.h/2*(1-Math.cos(i*cfg.radians/total))-20*Math.cos(i*cfg.radians/total);});

    d.forEach(function(y, x){
      dataValues = [];
      g.selectAll(".nodes")
      .data(y, function(j, i){
        dataValues.push([
          cfg.w/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total)),
          cfg.h/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total))
        ]);
      });
      dataValues.push(dataValues[0]);
      g.selectAll(".area")
      .data([dataValues])
      .enter()
      .append("polygon")
      .attr("class", "radar-chart-serie"+series)
      .style("stroke-width", "3px")
      .style("stroke", "white")
      .attr("points",function(d) {
        var str="";
        for(var pti=0;pti<d.length;pti++){
          str=str+d[pti][0]+","+d[pti][1]+" ";
        }
        return str;
      })
      .style("fill", function(j, i){return "white"})
      .style("fill-opacity", "0")
      .on('mouseover', function (d){
        z = "polygon."+d3.select(this).attr("class");
        g.selectAll("polygon")
        .transition(200)
        .style("fill-opacity", cfg.opacityArea);
        g.selectAll(z)
        .transition(200)
        .style("fill-opacity", cfg.opacityArea);
      })
      .on('mouseout', function(){
        g.selectAll("polygon")
        .transition(200)
        .style("fill-opacity", cfg.opacityArea);
      });
      series++;
    });
    series=0;

    d.forEach(function(y, x){
      g.selectAll(".nodes")
      .data(y).enter()
      .append("svg:circle")
      .attr("class", "radar-chart-serie"+series)
      .attr('r', cfg.radius)
      .attr("alt", function(j){return Math.max(j.value, 0)})
      .attr("cx", function(j, i){
        dataValues.push([
          cfg.w/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total)),
          cfg.h/2*(1-(parseFloat(Math.max(j.value, 0))/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total))
        ]);
        return cfg.w/2*(1-(Math.max(j.value, 0)/cfg.maxValue)*cfg.factor*Math.sin(i*cfg.radians/total));
      })
      .attr("cy", function(j, i){
        return cfg.h/2*(1-(Math.max(j.value, 0)/cfg.maxValue)*cfg.factor*Math.cos(i*cfg.radians/total));
      })
      .attr("data-id", function(j){return j.axis})
      .style("fill", "white").style("fill-opacity", 1)
      .append("svg:title")
      .text(function(j){return Math.max(j.value, 0)});

      series++;
    });
  }
};

</script>
<script>

var colorscale = d3.scale.category10();

//Data
var d = [
  [
    {
      axis: "Communicating",
      value: {{{safeStringify (if (compare @root.request.params.query.type "work") @root.request.params.query.s1w else=@root.request.params.query.s1)}}}
    },
    {
      axis: "Staying safe",
      value: {{{safeStringify (if (compare @root.request.params.query.type "work") @root.request.params.query.s5w else=@root.request.params.query.s5)}}}
    },
    {
      axis: "Transacting",
      value: {{{safeStringify (if (compare @root.request.params.query.type "work") @root.request.params.query.s4w else=@root.request.params.query.s4)}}}
    },
    {
      axis: "Problem solving",
      value: {{{safeStringify (if (compare @root.request.params.query.type "work") @root.request.params.query.s3w else=@root.request.params.query.s3)}}}
    },
    {
      axis: "Handling info",
      value: {{{safeStringify (if (compare @root.request.params.query.type "work") @root.request.params.query.s2w else=@root.request.params.query.s2)}}}
    }
  ]
];

//Options for the desktop radar chart, other than default
var mycfg = {
  w: 420,
  h: 420,
  maxValue: 3,
  levels: 3,
  TranslateX: 70,
  TranslateY: 70,
  ExtraWidthX: 140,
  ExtraWidthY: 140
}
//Call function to draw the desktop radar chart
RadarChart.draw(".radarChartDesktop", d, mycfg);

//Options for the mobile radar chart, other than default
var mycfg = {
  w: 220,
  h: 220,
  maxValue: 3,
  levels: 3,
  TranslateX: 40,
  TranslateY: 40,
  ExtraWidthX: 80,
  ExtraWidthY: 80
}
//Call function to draw the mobile radar chart
RadarChart.draw(".radarChartMobile", d, mycfg);

////////////////////////////////////////////
/////////// Initiate legend ////////////////
////////////////////////////////////////////

var svg = d3.select('#body')
.selectAll('svg')
.append('svg')
.attr("width", mycfg.w)
.attr("height", mycfg.h)

</script>